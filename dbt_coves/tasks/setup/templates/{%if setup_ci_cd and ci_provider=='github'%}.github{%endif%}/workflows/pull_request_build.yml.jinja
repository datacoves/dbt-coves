#### Pre-reqs ####
# Set the correct container based on your data warehouse
# Add all required environment variables/secrets in Github Actions

name: Test and Check on Pull Request

on:  # yamllint disable-line rule:truthy
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# This cancels a run if another change is pushed to the same branch
concurrency:
  {% raw %}group: ${{ github.workflow }}-${{ github.ref }}{%endraw%}
  cancel-in-progress: true

jobs:
  dbt:
    name: Pull Request dbt Tests
    runs-on: ubuntu-latest

    {% if 'snowflake' in dbt_adapter %}
    container: datacoves/ci-basic-dbt-snowflake:2.2
    {% elif 'redshift' in dbt_adapter %}
    container: datacoves/ci-basic-dbt-redshift:2.2
    {% elif 'databricks' in dbt_adapter %}
    container: datacoves/ci-basic-dbt-databricks:2.2
    {% elif 'bigquery' in dbt_adapter %}
    container: datacoves/ci-basic-dbt-bigquery:2.2
    {% endif %}

    defaults:
      run:
        {%raw%}# working-directory: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/transform{%endraw%}
        {% raw %} working-directory: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{%endraw%}

    env:
      {% raw %}DBT_PROFILES_DIR: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/automate/dbt{%endraw%}
      # If your dbt project is at the root.
      {% raw %}DATACOVES__DBT_HOME: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }} {%endraw%}
      # # If your dbt project is inside a transform directory.
      {%raw%}#DATACOVES__DBT_HOME: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}/transform {%endraw%}

      {% if 'snowflake' in dbt_adapter %}
      {% raw %}DATACOVES__MAIN__ACCOUNT: ${{ vars.DB_ACCOUNT }}
      DATACOVES__PROD__DATABASE: ${{ vars.PROD_DATABASE }}
      DATACOVES__MAIN__SCHEMA: ${{ vars.DB_SCHEMA }}
      DATACOVES__MAIN__ROLE: ${{ vars.DB_ROLE }}
      DATACOVES__MAIN__WAREHOUSE: ${{ vars.DB_WAREHOUSE }}
      DATACOVES__MAIN__USER: ${{ vars.DB_USER }}
      DATACOVES__MAIN__PASSWORD: ${{ secrets.DB_PASSWORD }}{%endraw%}
      {% elif 'redshift' in dbt_adapter %}
      ##### Redshift #####
      {% raw %}DATACOVES__MAIN__HOST: ${{ vars.DB_HOST }}
      DATACOVES__MAIN__USER: ${{ vars.DB_USER }}
      DATACOVES__MAIN__PASSWORD: ${{ vars.DB_PASSWORD }}
      DATACOVES__MAIN__DATABASE: ${{ vars.PROD_DATABASE }}
      DATACOVES__MAIN__SCHEMA: ${{ vars.DB_SCHEMA }}
      DATACOVES__MAIN__PORT: ${{ vars.DB_PORT }}{%endraw%}
      {% elif 'databricks' in dbt_adapter %}
      {%raw %}DATACOVES__MAIN__HOST: ${{ vars.DB_HOST }}
      DATACOVES__MAIN__HTTP_PATH: ${{ vars.DB_HTTP_PATH }}
      DATACOVES__MAIN__SCHEMA: ${{ vars.DB_SCHEMA }}
      DATACOVES__MAIN__TOKEN: ${{ vars.DB_TOKEN }}{%endraw%}
      {% elif 'bigquery' in dbt_adapter %}
      {% raw %}DATACOVES__MAIN__KEYFILE_JSON: ${{ vars.DB_KEYFILE_JSON }}
      DATACOVES__MAIN__PROJECT: ${{ vars.DB_PROJECT }}
      {% endraw %}
      {% endif %}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3.5.0
        with:
          fetch-depth: 0
          {% raw %}ref: ${{ github.event.pull_request.head.sha }}{% endraw %}

      - name: Set Secure Directory
        {% raw %}run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}{% endraw %}

      - name: List of files changed
        {% raw %}run: "git diff origin/${{ github.event.pull_request.base.ref }} HEAD --name-status"{% endraw %}

      - name: Install dbt packages
        run: "dbt deps"

      - name: Run dbt build
        run: "dbt build --fail-fast"

      - name: Run governance checks
        {% raw %}run: "pre-commit run --from-ref origin/${{ github.event.pull_request.base.ref }} --to-ref HEAD"{% endraw %}

      - name: Run governance checks 2
        {% raw %}run: "pre-commit run --from-ref origin/${{ github.event.pull_request.base.ref }} --to-ref HEAD"{% endraw %}
